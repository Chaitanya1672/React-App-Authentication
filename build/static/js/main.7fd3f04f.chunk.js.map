{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7fd3f04f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2C46t\",\"control\":\"ProfileForm_control__sPigR\",\"action\":\"ProfileForm_action__PrJ5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__KVkyw\",\"logo\":\"MainNavigation_logo__xdvoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3T2Zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__RTQg6\"};","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: (token) => { },\r\n  logout: () => { },\r\n});\r\n\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime')\r\n    return null;\r\n  }\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime\r\n  }\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expirationTime', expirationTime)\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime)\r\n  };\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null)\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  }\r\n\r\n  return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\r\n};\r\n\r\nexport default AuthContext;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  const logoutHandler = () => {\n    authCtx.logout();\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn &&\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>}\n\n          {isLoggedIn &&\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>}\n          {isLoggedIn &&\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDym4NwcQI8uD8Fq7dzxbBPTa3ZDLlNpfw', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => {\n      //Assumption : Always Succed!\n      history.replace('/');\n\n    })\n  }\n\n\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength='7' ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDym4NwcQI8uD8Fq7dzxbBPTa3ZDLlNpfw'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDym4NwcQI8uD8Fq7dzxbBPTa3ZDLlNpfw'\n    }\n    fetch(url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication Failed!';\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      }).then((data) => {\n        const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000))\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message)\n      });\n\n  }\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn &&\n          (<Route path='/auth'>\n            <AuthPage />\n          </Route>)}\n\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2oeyl\",\"control\":\"AuthForm_control__2JtkX\",\"actions\":\"AuthForm_actions__1_bzC\",\"toggle\":\"AuthForm_toggle__Lt1Wc\"};"],"sourceRoot":""}